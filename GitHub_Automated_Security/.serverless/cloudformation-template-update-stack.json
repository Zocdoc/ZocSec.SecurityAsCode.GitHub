{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "GithubWebhookListenerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/github-webhook3-listener-it-eng-githubWebhookListener"
      }
    },
    "InitialUnderscoretriggerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/github-webhook3-listener-it-eng-initial_trigger"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "it-eng",
                  "github-webhook3-listener",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/github-webhook3-listener-it-eng-githubWebhookListener:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/github-webhook3-listener-it-eng-initial_trigger:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/github-webhook3-listener-it-eng-githubWebhookListener:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/github-webhook3-listener-it-eng-initial_trigger:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "kms:Decrypt",
                  "Resource": [
                    "arn:aws:kms:us-east-1:033074250527:key/6789bea7-2049-46c3-819f-ecc50bd7ec5e"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "apigateway:GET",
                  "Resource": [
                    "arn:aws:apigateway:us-east-1::/restapis*"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "github-webhook3-listener",
              "it-eng",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
        ]
      }
    },
    "GithubWebhookListenerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/github-webhook3-listener/it-eng/1557959135021-2019-05-15T22:25:35.021Z/github-webhook3-listener.zip"
        },
        "FunctionName": "github-webhook3-listener-it-eng-githubWebhookListener",
        "Handler": "githubWebhook/handler.githubWebhookListener",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "NODE_PATH": "./:/opt/node_modules",
            "GITHUB_TOKEN": "AQICAHghZJG0CXhHDVEVLLRohQvXsX8Y6etrgVKE7+CRTKBaegE9JsWdo3PUDYbHEalOlDgEAAAAhzCBhAYJKoZIhvcNAQcGoHcwdQIBADBwBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDDuapdQFCGwpwDNuhQIBEIBDoiUdqUP4quPLCuwGg2wDQsFl4hGiavtnu8+AON0wdgBywAEkcEqlcT4ovBgnqqGYYrr2mMe0dxjOdeYYwpZPexib6A==",
            "GITHUB_WEBHOOK_SECRET": "AQICAHghZJG0CXhHDVEVLLRohQvXsX8Y6etrgVKE7+CRTKBaegEM9smuNySmPxnuvp2RcvGoAAAAcTBvBgkqhkiG9w0BBwagYjBgAgEAMFsGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMX83sDZJRAM9RqGo+AgEQgC78+5C+y/8p3TyaA6Xcheqs84DvSPuQqpu5Xt34Cq5d24onDrMf8pa9oiyWUNU8"
          }
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:033074250527:layer:octokit_Module:22"
        ]
      },
      "DependsOn": [
        "GithubWebhookListenerLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "GithubWebhookListenerLambdaVersionHHLEqCW7nliC7y7W1aopkKEE3d3kaaAw4qvveS3BXU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GithubWebhookListenerLambdaFunction"
        },
        "CodeSha256": "22MIvGzTTZTbYuYbwqhqv6TzTYW0+xJkyoE1Y10VCnU="
      }
    },
    "InitialUnderscoretriggerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/github-webhook3-listener/it-eng/1557959135021-2019-05-15T22:25:35.021Z/github-webhook3-listener.zip"
        },
        "FunctionName": "github-webhook3-listener-it-eng-initial_trigger",
        "Handler": "initialTrigger/handler.initial_trigger",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "NODE_PATH": "./:/opt/node_modules",
            "GITHUB_TOKEN": "AQICAHghZJG0CXhHDVEVLLRohQvXsX8Y6etrgVKE7+CRTKBaegE9JsWdo3PUDYbHEalOlDgEAAAAhzCBhAYJKoZIhvcNAQcGoHcwdQIBADBwBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDDuapdQFCGwpwDNuhQIBEIBDoiUdqUP4quPLCuwGg2wDQsFl4hGiavtnu8+AON0wdgBywAEkcEqlcT4ovBgnqqGYYrr2mMe0dxjOdeYYwpZPexib6A==",
            "GITHUB_WEBHOOK_SECRET": "AQICAHghZJG0CXhHDVEVLLRohQvXsX8Y6etrgVKE7+CRTKBaegEM9smuNySmPxnuvp2RcvGoAAAAcTBvBgkqhkiG9w0BBwagYjBgAgEAMFsGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMX83sDZJRAM9RqGo+AgEQgC78+5C+y/8p3TyaA6Xcheqs84DvSPuQqpu5Xt34Cq5d24onDrMf8pa9oiyWUNU8",
            "ORG": "Zocdoc"
          }
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:033074250527:layer:octokit_Module:22"
        ]
      },
      "DependsOn": [
        "InitialUnderscoretriggerLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "InitialUnderscoretriggerLambdaVersionMVf1SzRmJ6tiTBAQqK3yNGmGCVOk1sK4jKyfMbtQWY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "InitialUnderscoretriggerLambdaFunction"
        },
        "CodeSha256": "22MIvGzTTZTbYuYbwqhqv6TzTYW0+xJkyoE1Y10VCnU="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "it-eng-github-webhook3-listener",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceWebhook": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "webhook",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceInitialtrigger": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "initial_trigger",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodWebhookPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceWebhook"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GithubWebhookListenerLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodInitialtriggerGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceInitialtrigger"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "InitialUnderscoretriggerLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1557959124762": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "it-eng"
      },
      "DependsOn": [
        "ApiGatewayMethodWebhookPost",
        "ApiGatewayMethodInitialtriggerGet"
      ]
    },
    "GithubWebhookListenerLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GithubWebhookListenerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "InitialUnderscoretriggerLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "InitialUnderscoretriggerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "GithubWebhookListenerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GithubWebhookListenerLambdaVersionHHLEqCW7nliC7y7W1aopkKEE3d3kaaAw4qvveS3BXU"
      }
    },
    "InitialUnderscoretriggerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "InitialUnderscoretriggerLambdaVersionMVf1SzRmJ6tiTBAQqK3yNGmGCVOk1sK4jKyfMbtQWY"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/it-eng"
          ]
        ]
      }
    }
  }
}